;
; Copyright (c) 2021 Raspberry Pi (Trading) Ltd.
;
; SPDX-License-Identifier: BSD-3-Clause
;

.program spi_slave

; Sample bits using an external clock, and push groups of bits into the RX FIFO.
; - IN pin 0 is the data pin
; - GPIO for the clock is set to 23 by default, user can change it later
; - Autopush is enabled, threshold 8
;
; This program samples data with each rising clock edge (like mode 0 or mode 3
; SPI). The data is actually sampled one system clock cycle after the rising
; edge is observed, so a clock ratio of at least input_clk < clk_sys / 6 is
; recommended for good sampling alignment.

    wait 0 gpio 23
    out pins, 1
    wait 1 gpio 23
    in pins, 1

% c-sdk {
static inline void spi_slave_program_init(PIO pio, uint sm, uint offset, uint mosi, uint miso) {
    pio_sm_config c = spi_slave_program_get_default_config(offset);

    // Set the IN base pin to the provided `pin` parameter. This is the data
    // pin, and the next-numbered GPIO is used as the clock pin.
    sm_config_set_in_pins(&c, mosi);
    sm_config_set_out_pins(&c, miso, 1);
    // Set the pin directions to input at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, mosi, 1, false);
    pio_sm_set_consecutive_pindirs(pio, sm, miso, 1, true);
    // Connect these GPIOs to this PIO block
    pio_gpio_init(pio, mosi);
    pio_gpio_init(pio, miso);

    // Shifting to left matches the customary MSB-first ordering of SPI.
    sm_config_set_in_shift(
        &c,
        false, // Shift-to-right = false (i.e. shift to left)
        true,  // Autopush enabled
        8      // Autopush threshold = 8
    );

    // Shifting to left matches the customary MSB-first ordering of SPI.
    sm_config_set_out_shift(
        &c,
        false, // Shift-to-right = false (i.e. shift to left)
        true,  // Autopull enabled
        8      // Autopull threshold = 8
    );

    // Load our configuration, and start the program from the beginning
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}
